"""
The main, core program. A CLI program.

For now: whilst this is just a CLI program, you must edit any key settings with the file:
        C:\Potts' Software\Fortnite Exploit\fe-sett.ini
Changing this file is permitted, I'm not the best at efficient programming. Work away.

Written by Elliot Potts,
https://www.elliotpotts.me/
"""

import os
import time
import keyboard
import ConfigParser


local_settings = {
    'hotkey': None,
    'audio_mute': None,
    'bool_temp': None
}


cPar = ConfigParser.SafeConfigParser()


def settingsDigest():
    if os.path.isdir("C:\Potts' Software\Fortnite Exploit"):
        pass
    else:
        os.makedirs("C:\Potts' Software\Fortnite Exploit")

    os.chdir("C:\Potts' Software\Fortnite Exploit")

    if os.path.isfile("fe-sett.ini"):
        settRead = cPar.read("fe-sett.ini")
        local_settings['hotkey'] = cPar.get("settings", "Hotkey")
        local_settings['audio_mute'] = cPar.get("settings", "Voice")
    else:
        cfgFile = open("fe-sett.ini", "w")
        cPar.add_section("settings")
        cPar.set("settings", "Hotkey", "V")
        cPar.set("settings", "Voice", "False")
        cPar.write(cfgFile)
        cfgFile.close()
        settRead = cPar.read("fe-sett.ini")
        local_settings['hotkey'] = cPar.get("settings", "Hotkey")
        local_settings['audio_mute'] = cPar.get("settings", "Voice")


settingsDigest()


def spacer(ammount):
    time.sleep(1)
    print("" * ammount)


def suspendAudio(state):
    pass


def startProgram():
    print("Program activated. Press {} to activate glitch.".format(str(local_settings['hotkey'])))
    print("Press CTRL+C to TERMINATE the program. Release {} to stop the glitch.".format(str(local_settings['hotkey'])))
    spacer(2)
    while True:
        if keyboard.is_pressed(local_settings['hotkey']):
            keyboard.press_and_release('space')
        else:
            pass


def main():
    spacer(5)
    print("""Your settings are as follows:
1). Your hotkey is set to: {},
2). Your audio mute preference is: {}
You may change these values manually or by using the menu function.""".format(str(local_settings['hotkey']),
                                                                              str(local_settings['audio_mute'])))
    spacer(5)

    if local_settings['audio_mute'].lower() == "false":
        local_settings['bool_temp'] = "True"
    elif local_settings['audio_mute'].lower() == "true":
        local_settings['bool_temp'] = "False"

    print("""Please chose a menu option to get started:
1). Modify Hotkey
2). Change audio mute to {}
3). Display settings
--------------------------------------
4). Start program (activate exploit
5). Quit program)""".format(str(local_settings['bool_temp'])))
    try:
        getMenuChoice = int(raw_input("Enter your choice: "))
    except ValueError:
        print("You have entered an invalid input.")
        main()

    if getMenuChoice == 1:
        print("Your hotkey is currently: {}, enter what you would like it to be changed to and press enter.".format(str(
            local_settings['hotkey']
        )))
        getHotKeyChange = raw_input("Enter your hotkey: ")
        cfgFile = open(r"C:\Potts' Software\Fortnite Exploit\fe-sett.ini", "w")
        cPar.set("settings", "Hotkey", getHotKeyChange)
        cPar.write(cfgFile)
        cfgFile.close()
        settRead = cPar.read(r"C:\Potts' Software\Fortnite Exploit\fe-sett.ini")
        local_settings['hotkey'] = cPar.get("settings", "Hotkey")

        print("Your hotkey has been changed to {} successfully.".format(str(local_settings['hotkey'])))
    elif getMenuChoice == 2:
        print("Are you sure you want to change your audio mute setting from {}?\n"
              "This WILL make your system audio MUTED when the hotkey is active.".format(str(local_settings['audio_mute'])))
        getAudConfirm = raw_input("Are you sure? (Y/N): ").upper()
        if getAudConfirm == "Y":
            cfgFile = open(r"C:\Potts' Software\Fortnite Exploit\fe-sett.ini", "w")
            cPar.set("settings", "Voice", local_settings['bool_temp'])
            cPar.write(cfgFile)
            cfgFile.close()
            settRead = cPar.read(r"C:\Potts' Software\Fortnite Exploit\fe-sett.ini")
            local_settings['audio_mute'] = cPar.get("settings", "Voice")
            print("Audio mute is now set to: {}".format(str(local_settings['audio_mute'])))
            print("Returning to the menu...")
            main()
        elif getAudConfirm == "N":
            print("Confirm denied. Going back to menu.")
            main()
        else:
            print("Confirmation input invalid. No changes made. Returning to menu.")
            main()
    elif getMenuChoice == 3:
        spacer(5)
        print("""Your settings are as follows:
1). Your hotkey is set to: {},
2). Your audio mute preference is: {}
You may change these values manually or by using the menu function.""".format(str(local_settings['hotkey']),
                                                                              str(local_settings['audio_mute'])))
    elif getMenuChoice == 4:
        startProgram()
    elif getMenuChoice == 5:
        print("Program is being terminated via menu choice. Bye!")
        spacer(5)
        quit()


if __name__ == '__main__':
    try:
        main()
    except KeyboardInterrupt:
        print(" [-] The program has been manually terminated via the keyboard...")
